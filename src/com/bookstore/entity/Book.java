package com.bookstore.entity;
// Generated May 22, 2018 5:46:15 AM by Hibernate Tools 5.2.10.Final

import java.util.Base64;
import java.util.Comparator;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.swing.event.TreeSelectionEvent;

/**
 * Book generated by hbm2java
 */

//@NamedQueries({
//	@NamedQuery(name = "Book.findAll", query = "SELECT b FROM Book b"),
//	@NamedQuery(name = "Book.findByTitle", query = "SELECT b FROM Book b WHERE b.title = :title"),
//	@NamedQuery(name = "Book.countAll", query = "SELECT COUNT(*) FROM Book b"),
//	@NamedQuery(name = "Book.countByCategory", query = "SELECT COUNT(b) FROM Book b "
//			+ "WHERE b.category.categoryId = :catId"),
//	@NamedQuery(name = "Book.findByCategory", query = "SELECT b FROM Book b JOIN "
//			+ "Category c ON b.category.categoryId = c.categoryId AND c.categoryId = :catId"),
//	@NamedQuery(name = "Book.listNew", query = "SELECT b FROM Book b ORDER BY b.publishDate DESC"),
//	@NamedQuery(name = "Book.search", query = "SELECT b FROM Book b WHERE b.title LIKE '%' || :keyword || '%'"
//			+ " OR b.author LIKE '%' || :keyword || '%'"
//			+ " OR b.description LIKE '%' || :keyword || '%'")
//})
@Entity
@Table(name = "book", catalog = "bookstoredb2", uniqueConstraints = @UniqueConstraint(columnNames = "title"))
public class Book implements java.io.Serializable {
 
    private Integer bookId;
    private Category category;
    private String title;
    private String author;
 
    private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
 
    public Book() {
    }
     
 
    @Id
    @GeneratedValue(strategy = IDENTITY)
 
    @Column(name = "book_id", unique = true, nullable = false)
    public Integer getBookId() {
        return this.bookId;
    }
 
    public void setBookId(Integer bookId) {
        this.bookId = bookId;
    }
 
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "category_id", nullable = false)
    public Category getCategory() {
        return this.category;
    }
 
    public void setCategory(Category category) {
        this.category = category;
    }
 
    @Column(name = "title", unique = true, nullable = false, length = 128)
    public String getTitle() {
        return this.title;
    }
 
    public void setTitle(String title) {
        this.title = title;
    }
 
    @Column(name = "author", nullable = false, length = 64)
    public String getAuthor() {
        return this.author;
    }
 
    public void setAuthor(String author) {
        this.author = author;
    }
 
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
    public Set<OrderDetail> getOrderDetails() {
        return this.orderDetails;
    }
 
    public void setOrderDetails(Set<OrderDetail> orderDetails) {
        this.orderDetails = orderDetails;
    }
 
}
